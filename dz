''''
Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке 
возрастания все те числа, которые встречаются в обоих наборах.
Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
Затем пользователь вводит сами элементы множеств.
'''
from random import randint
   

print(" --- Нахождения пересичений 2Х множеств --- ")
set_N = set(randint(1,30) for i in range(int(input('Кол-во элементов 1-го множества: '))))
print(set_N)
set_M = set(randint(1, 30) for i in range(int(input('Кол-во элементов 2-го множества: ' ))))
print(set_M)
sort = sorted(set_N.intersection(set_M))
print(*sort)

'''
Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, 
причём кусты высажены только по окружности. 
Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное 
число ягод — на i-ом кусте выросло a[i] ягод. В этом фермерском хозяйстве внедрена система
автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих 
модулей.Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
собирает ягоды с этого куста и с двух соседних с ним.Напишите программу для нахождения максимального
числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном списке 
урожайности грядки.

'''

number = int(input("Введите количество кустов: "))
print("!!! Ввод урожайность каждого куста  осуществляется через пробел !!!")
count_Namber = list(map(int, input("Введите урожайность куста  : ").split()))

count_Max = 0
for i in range(number):   
    count_i = count_Namber[i] + count_Namber[(i+1)%number] + count_Namber[(i+2)%number]
    if count_i > count_Max:
        count_Max = count_i

print("Мах число ягод, за один заход модуля для сборки :", count_Max)
